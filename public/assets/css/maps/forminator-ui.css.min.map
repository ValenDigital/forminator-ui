{"version":3,"sources":["forminator-ui/mixins/_body-class.scss","forminator-ui/_grid.scss","forminator-ui/_variables.scss","forminator-ui/mixins/_breakpoints.scss"],"names":[],"mappings":"AAgBE,mFCPE,kBCWe,CFJjB,mFCCE,kBCGe,CFJjB,6ECaE,iBCPoB,CFNtB,6ECqBE,iBCfoB,CCJtB,0BHFA,qECgCE,oBAAA,AAAa,oBAAb,AAAa,YAAA,CAEd,CEhCD,0BHFA,sFC0CG,eAAgB,CAEjB,CE1CF,0BHFA,qEC+CE,mBAAA,AAAO,WAAP,AAAO,MAAA,CAER,CE/CD,0BHFA,+FC0DG,mBACA,iBAA6B,CAE9B,CE3DF,0BHFA,+FCmEG,cAAyB,CAE1B,CEnEF,0BHFA,yFC+EG,kBACA,gBAAsC,CAEvC,CEhFF,0BHFA,yFCwFG,aAAkC,CAEnC,CAAA","file":"../forminator-ui.css","sourcesContent":["// =============================================\n// There are two way for using this mixin. You\n// can display module class only or module class\n// with module theme. For both cases follow this:\n//\n// A) To get quiz module class only:\n//    @include body-class(quiz, '') { ... }\n//\n// B) To get quiz module + flat theme class:\n//    @include body-class(quiz, flat) { ... }\n// =============================================\n\n@mixin body-class($module-type, $module-theme: null) {\n\n\t@if ($module-theme == null) {\n\n\t\t.forminator-#{$module-type} {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\n\t\t.forminator-#{$module-type}.forminator-design--#{$module-theme} {\n\t\t\t@content;\n\t\t}\n\t}\n}","@include body-class(custom-form) {\n\n\t// SPACING: Default\n\t&:not(.forminator-enclosed) {\n\n\t\t// ELEMENT: Row\n\t\t.forminator-row {\n\n\t\t\t&:not(:last-child) {\n\t\t\t\tmargin-bottom: $gutter-sm;\n\t\t\t}\n\t\t}\n\n\t\t// ELEMENT: Column\n\t\t.forminator-col {\n\n\t\t\t&:not(:last-child) {\n\t\t\t\tmargin-bottom: $gutter-sm;\n\t\t\t}\n\t\t}\n\t}\n\n\t// SPACING: Enclosed\n\t&.forminator-enclosed {\n\n\t\t// ELEMENT: Row\n\t\t.forminator-row {\n\n\t\t\t&:not(:last-child) {\n\t\t\t\tmargin-bottom: $gutter-enclosed-sm;\n\t\t\t}\n\t\t}\n\n\t\t// ELEMENT: Column\n\t\t.forminator-col {\n\n\t\t\t&:not(:last-child) {\n\t\t\t\tmargin-bottom: $gutter-enclosed-sm;\n\t\t\t}\n\t\t}\n\t}\n\n\t&:not(.forminator-size--small) {\n\n\t\t// ELEMENT: Row\n\t\t.forminator-row {\n\n\t\t\t@include media(min-width, md) {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t}\n\n\t\t// ELEMENT: Column\n\t\t.forminator-col {\n\n\t\t\t&:not(:last-child) {\n\n\t\t\t\t@include media(min-width, md) {\n\t\t\t\t\tmargin-bottom: 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@include media(min-width, md) {\n\t\t\t\tflex: 1;\n\t\t\t}\n\t\t}\n\n\t\t// SPACING: Default\n\t\t&:not(.forminator-enclosed) {\n\n\t\t\t// ELEMENT: Row\n\t\t\t.forminator-row {\n\n\t\t\t\t@include media(min-width, md) {\n\t\t\t\t\tmargin-right: -#{$gutter / 2};\n\t\t\t\t\tmargin-left: -#{$gutter / 2};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ELEMENT: Column\n\t\t\t.forminator-col {\n\n\t\t\t\t@include media(min-width, md) {\n\t\t\t\t\tpadding: 0 #{$gutter / 2};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// SPACING: Enclosed\n\t\t&.forminator-enclosed {\n\n\t\t\t// ELEMENT: Row\n\t\t\t.forminator-row {\n\n\t\t\t\t@include media(min-width, md) {\n\t\t\t\t\tmargin-right: -#{$gutter-enclosed / 2};\n\t\t\t\t\tmargin-left: -#{$gutter-enclosed / 2};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ELEMENT: Column\n\t\t\t.forminator-col {\n\n\t\t\t\t@include media(min-width, md) {\n\t\t\t\t\tpadding: 0 #{$gutter-enclosed / 2};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","// =============================================\n// VARIABLES MENU\n//\n// 1. BREAKPOINTS\n// 2. BASIC VARIABLES\n// =============================================\n\n// =============================================\n// 1. BREAKPOINTS\n\n$fui-breakpoints: (\n\tsm: 783px,\n\tmd: 961px,\n\tlg: 1201px\n) !default;\n\n// =============================================\n// 2. BASIC VARIABLES\n\n$gutter:\t\t\t\t30px !default;\n$gutter-sm:\t\t\t\t20px !default;\n$gutter-enclosed:\t\t14px !default;\n$gutter-enclosed-sm:\t8px  !default;","// =============================================\n// You can get breakpoints based on minimum width\n// or based on maximium width. For both cases, do\n// the following:\n//\n// A) Display styles based on min-width:\n//    @include media(min-width, small);\n//\n// B) Display styles based on max-width:\n//    @include media(max-width, small);\n// =============================================\n\n@mixin media($bp-type, $bp-name-1, $bp-name-2: null) {\n\n\t@if ($bp-type == min-width) {\n\n\t\t$min-breakpoint-width: map-get($fui-breakpoints, $bp-name-1);\n\n\t\t@media (min-width: $min-breakpoint-width) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if ($bp-type == max-width) {\n\n\t\t$max-breakpoint-width: #{map-get($fui-breakpoints, $bp-name-1) - 1px};\n\n\t\t@media (max-width: $max-breakpoint-width) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if ($bp-type == between) {\n\t\t\n\t\t$min-breakpoint-width: map-get($fui-breakpoints, $bp-name-1);\n\t\t$max-breakpoint-width: #{map-get($fui-breakpoints, $bp-name-1) - 1px};\n\n\t\t@media (min-width: $min-breakpoint-width) and (max-width: $max-breakpoint-width) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else {\n\n\t\t@warn \"Unfortunately, no type could be retrieved from `#{$bp-type}`. \"\n\t\t+ \"Use either `min-width`, `max-width`, or `between`.\";\n\t}\n}"]}